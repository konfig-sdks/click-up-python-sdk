# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from click_up_python_sdk.type.assignees1 import Assignees1
from click_up_python_sdk.type.checklists6 import Checklists6
from click_up_python_sdk.type.creator5 import Creator5
from click_up_python_sdk.type.custom_fields9 import CustomFields9
from click_up_python_sdk.type.folder3 import Folder3
from click_up_python_sdk.type.list2 import List2
from click_up_python_sdk.type.project import Project
from click_up_python_sdk.type.space import Space
from click_up_python_sdk.type.status import Status
from click_up_python_sdk.type.tags6 import Tags6
from click_up_python_sdk.type.task3_dependencies import Task3Dependencies
from click_up_python_sdk.type.task3_linked_tasks import Task3LinkedTasks
from click_up_python_sdk.type.watchers1 import Watchers1

RequiredTask3 = TypedDict("RequiredTask3", {
    "tags": typing.List[Tags6],

    "description": str,

    "id": str,

    "custom_id": typing.Union[bool, date, datetime, dict, float, int, list, str, None],

    "name": str,

    "text_content": str,

    "status": Status,

    "orderindex": str,

    "date_created": str,

    "date_updated": str,

    "date_closed": str,

    "date_done": typing.Union[bool, date, datetime, dict, float, int, list, str, None],

    "creator": Creator5,

    "assignees": typing.List[Assignees1],

    "watchers": typing.List[Watchers1],

    "checklists": typing.List[Checklists6],

    "parent": str,

    "priority": int,

    "due_date": str,

    "start_date": str,

    "points": typing.Union[int, float],

    "time_estimate": typing.Union[int, float],

    "custom_fields": typing.List[CustomFields9],

    "dependencies": Task3Dependencies,

    "linked_tasks": Task3LinkedTasks,

    "team_id": str,

    "url": str,

    "permission_level": str,

    "list": List2,

    "project": Project,

    "folder": Folder3,

    "space": Space,
    })

OptionalTask3 = TypedDict("OptionalTask3", {
    "markdown_description": str,
    }, total=False)

class Task3(RequiredTask3, OptionalTask3):
    pass
