# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from click_up_python_sdk.pydantic.option import Option
from click_up_python_sdk.pydantic.tracking import Tracking

class TypeConfig(BaseModel):
    options: typing.Optional[typing.List[Option]] = Field(None, alias='options')

    default: typing.Optional[typing.Union[typing.Union[bool, date, datetime, dict, float, int, list, str, None], int, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='default')

    precision: typing.Optional[int] = Field(None, alias='precision')

    currency_type: typing.Optional[str] = Field(None, alias='currency_type')

    placeholder: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='placeholder')

    end: typing.Optional[int] = Field(None, alias='end')

    start: typing.Optional[int] = Field(None, alias='start')

    count: typing.Optional[int] = Field(None, alias='count')

    code_point: typing.Optional[str] = Field(None, alias='code_point')

    tracking: typing.Optional[Tracking] = Field(None, alias='tracking')

    complete_on: typing.Optional[int] = Field(None, alias='complete_on')
    class Config:
        arbitrary_types_allowed = True
