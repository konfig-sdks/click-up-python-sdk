# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from click_up_python_sdk.pydantic.creator import Creator
from click_up_python_sdk.pydantic.custom_fields8 import CustomFields8
from click_up_python_sdk.pydantic.folder import Folder
from click_up_python_sdk.pydantic.get_taskresponse_assignees import GetTaskresponseAssignees
from click_up_python_sdk.pydantic.get_taskresponse_checklists import GetTaskresponseChecklists
from click_up_python_sdk.pydantic.get_taskresponse_tags import GetTaskresponseTags
from click_up_python_sdk.pydantic.model_list import ModelList
from click_up_python_sdk.pydantic.space import Space
from click_up_python_sdk.pydantic.status import Status

class GetTaskresponse(BaseModel):
    tags: typing.Optional[GetTaskresponseTags] = Field(None, alias='tags')

    description: typing.Optional[str] = Field(None, alias='description')

    id: typing.Optional[str] = Field(None, alias='id')

    custom_id: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='custom_id')

    # A `null` value means this item is a task. A value of `1` is a Milestone. Any other number is a custom task type.
    custom_item_id: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='custom_item_id')

    name: typing.Optional[str] = Field(None, alias='name')

    text_content: typing.Optional[str] = Field(None, alias='text_content')

    status: typing.Optional[Status] = Field(None, alias='status')

    orderindex: typing.Optional[str] = Field(None, alias='orderindex')

    date_created: typing.Optional[str] = Field(None, alias='date_created')

    date_updated: typing.Optional[str] = Field(None, alias='date_updated')

    date_closed: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='date_closed')

    creator: typing.Optional[Creator] = Field(None, alias='creator')

    assignees: typing.Optional[GetTaskresponseAssignees] = Field(None, alias='assignees')

    checklists: typing.Optional[GetTaskresponseChecklists] = Field(None, alias='checklists')

    parent: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='parent')

    priority: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='priority')

    due_date: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='due_date')

    start_date: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='start_date')

    time_estimate: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='time_estimate')

    time_spent: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='time_spent')

    custom_fields: typing.Optional[typing.List[CustomFields8]] = Field(None, alias='custom_fields')

    list_: typing.Optional[ModelList] = Field(None, alias='list')

    folder: typing.Optional[Folder] = Field(None, alias='folder')

    space: typing.Optional[Space] = Field(None, alias='space')

    url: typing.Optional[str] = Field(None, alias='url')

    markdown_description: typing.Optional[str] = Field(None, alias='markdown_description')
    class Config:
        arbitrary_types_allowed = True
