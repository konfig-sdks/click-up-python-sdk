# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from click_up_python_sdk.pydantic.create_taskrequest_assignees import CreateTaskrequestAssignees
from click_up_python_sdk.pydantic.create_taskrequest_tags import CreateTaskrequestTags
from click_up_python_sdk.pydantic.custom_fields6 import CustomFields6

class CreateTaskrequest(BaseModel):
    name: str = Field(alias='name')

    tags: typing.Optional[CreateTaskrequestTags] = Field(None, alias='tags')

    description: typing.Optional[str] = Field(None, alias='description')

    assignees: typing.Optional[CreateTaskrequestAssignees] = Field(None, alias='assignees')

    status: typing.Optional[str] = Field(None, alias='status')

    priority: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='priority')

    due_date: typing.Optional[int] = Field(None, alias='due_date')

    due_date_time: typing.Optional[bool] = Field(None, alias='due_date_time')

    time_estimate: typing.Optional[int] = Field(None, alias='time_estimate')

    start_date: typing.Optional[int] = Field(None, alias='start_date')

    start_date_time: typing.Optional[bool] = Field(None, alias='start_date_time')

    # If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.
    notify_all: typing.Optional[bool] = Field(None, alias='notify_all')

    # You can create a subtask by including an existing task ID.\\  \\ The `parent` task ID you include cannot be a subtask, and must be in the same List specified in the path parameter.
    parent: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='parent')

    # Include a task ID to create a linked dependency with your new task.
    links_to: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='links_to')

    # When creating a task via API any required Custom Fields are ignored by default (`false`).\\  \\ You can enforce required Custom Fields by including `check_required_custom_fields: true`.
    check_required_custom_fields: typing.Optional[bool] = Field(None, alias='check_required_custom_fields')

    # [Filter by Custom Fields.](https://clickup.com/api)
    custom_fields: typing.Optional[typing.List[CustomFields6]] = Field(None, alias='custom_fields')

    # To create a task that doesn't use a custom task type, either don't include this field in the request body, or send `'null'`. \\  \\ To create this task as a Milestone, send a value of `1`.\\  \\ To use a custom task type, send the custom task type ID as defined in your Workspace, such as `2`.
    custom_item_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='custom_item_id')
    class Config:
        arbitrary_types_allowed = True
