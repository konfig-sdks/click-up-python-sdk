# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from click_up_python_sdk import schemas  # noqa: F401


class CreateTaskresponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def tags() -> typing.Type['CreateTaskresponseTags']:
                return CreateTaskresponseTags
            description = schemas.StrSchema
            id = schemas.StrSchema
            custom_id = schemas.AnyTypeSchema
            custom_item_id = schemas.AnyTypeSchema
            name = schemas.StrSchema
            text_content = schemas.StrSchema
        
            @staticmethod
            def status() -> typing.Type['Status']:
                return Status
            orderindex = schemas.StrSchema
            date_created = schemas.StrSchema
            date_updated = schemas.StrSchema
            date_closed = schemas.AnyTypeSchema
        
            @staticmethod
            def creator() -> typing.Type['Creator']:
                return Creator
        
            @staticmethod
            def assignees() -> typing.Type['CreateTaskresponseAssignees']:
                return CreateTaskresponseAssignees
        
            @staticmethod
            def checklists() -> typing.Type['CreateTaskresponseChecklists']:
                return CreateTaskresponseChecklists
            parent = schemas.AnyTypeSchema
            priority = schemas.AnyTypeSchema
            due_date = schemas.AnyTypeSchema
            start_date = schemas.AnyTypeSchema
            time_estimate = schemas.AnyTypeSchema
            time_spent = schemas.AnyTypeSchema
            
            
            class custom_fields(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomFields8']:
                        return CustomFields8
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CustomFields8'], typing.List['CustomFields8']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'custom_fields':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomFields8':
                    return super().__getitem__(i)
        
            @staticmethod
            def _list() -> typing.Type['ModelList']:
                return ModelList
        
            @staticmethod
            def folder() -> typing.Type['Folder']:
                return Folder
        
            @staticmethod
            def space() -> typing.Type['Space']:
                return Space
            url = schemas.StrSchema
            __annotations__ = {
                "tags": tags,
                "description": description,
                "id": id,
                "custom_id": custom_id,
                "custom_item_id": custom_item_id,
                "name": name,
                "text_content": text_content,
                "status": status,
                "orderindex": orderindex,
                "date_created": date_created,
                "date_updated": date_updated,
                "date_closed": date_closed,
                "creator": creator,
                "assignees": assignees,
                "checklists": checklists,
                "parent": parent,
                "priority": priority,
                "due_date": due_date,
                "start_date": start_date,
                "time_estimate": time_estimate,
                "time_spent": time_spent,
                "custom_fields": custom_fields,
                "list": _list,
                "folder": folder,
                "space": space,
                "url": url,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tags"]) -> 'CreateTaskresponseTags': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_id"]) -> MetaOapg.properties.custom_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_item_id"]) -> MetaOapg.properties.custom_item_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["text_content"]) -> MetaOapg.properties.text_content: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'Status': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orderindex"]) -> MetaOapg.properties.orderindex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_created"]) -> MetaOapg.properties.date_created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_updated"]) -> MetaOapg.properties.date_updated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_closed"]) -> MetaOapg.properties.date_closed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creator"]) -> 'Creator': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignees"]) -> 'CreateTaskresponseAssignees': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["checklists"]) -> 'CreateTaskresponseChecklists': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parent"]) -> MetaOapg.properties.parent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["priority"]) -> MetaOapg.properties.priority: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["due_date"]) -> MetaOapg.properties.due_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["start_date"]) -> MetaOapg.properties.start_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_estimate"]) -> MetaOapg.properties.time_estimate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_spent"]) -> MetaOapg.properties.time_spent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_fields"]) -> MetaOapg.properties.custom_fields: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["list"]) -> 'ModelList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["folder"]) -> 'Folder': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["space"]) -> 'Space': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["tags", "description", "id", "custom_id", "custom_item_id", "name", "text_content", "status", "orderindex", "date_created", "date_updated", "date_closed", "creator", "assignees", "checklists", "parent", "priority", "due_date", "start_date", "time_estimate", "time_spent", "custom_fields", "list", "folder", "space", "url", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tags"]) -> typing.Union['CreateTaskresponseTags', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_id"]) -> typing.Union[MetaOapg.properties.custom_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_item_id"]) -> typing.Union[MetaOapg.properties.custom_item_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["text_content"]) -> typing.Union[MetaOapg.properties.text_content, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union['Status', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orderindex"]) -> typing.Union[MetaOapg.properties.orderindex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_created"]) -> typing.Union[MetaOapg.properties.date_created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_updated"]) -> typing.Union[MetaOapg.properties.date_updated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_closed"]) -> typing.Union[MetaOapg.properties.date_closed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creator"]) -> typing.Union['Creator', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignees"]) -> typing.Union['CreateTaskresponseAssignees', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["checklists"]) -> typing.Union['CreateTaskresponseChecklists', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parent"]) -> typing.Union[MetaOapg.properties.parent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["priority"]) -> typing.Union[MetaOapg.properties.priority, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["due_date"]) -> typing.Union[MetaOapg.properties.due_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["start_date"]) -> typing.Union[MetaOapg.properties.start_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_estimate"]) -> typing.Union[MetaOapg.properties.time_estimate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_spent"]) -> typing.Union[MetaOapg.properties.time_spent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_fields"]) -> typing.Union[MetaOapg.properties.custom_fields, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["list"]) -> typing.Union['ModelList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["folder"]) -> typing.Union['Folder', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["space"]) -> typing.Union['Space', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["tags", "description", "id", "custom_id", "custom_item_id", "name", "text_content", "status", "orderindex", "date_created", "date_updated", "date_closed", "creator", "assignees", "checklists", "parent", "priority", "due_date", "start_date", "time_estimate", "time_spent", "custom_fields", "list", "folder", "space", "url", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        tags: typing.Union['CreateTaskresponseTags', schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        custom_id: typing.Union[MetaOapg.properties.custom_id, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        custom_item_id: typing.Union[MetaOapg.properties.custom_item_id, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        text_content: typing.Union[MetaOapg.properties.text_content, str, schemas.Unset] = schemas.unset,
        status: typing.Union['Status', schemas.Unset] = schemas.unset,
        orderindex: typing.Union[MetaOapg.properties.orderindex, str, schemas.Unset] = schemas.unset,
        date_created: typing.Union[MetaOapg.properties.date_created, str, schemas.Unset] = schemas.unset,
        date_updated: typing.Union[MetaOapg.properties.date_updated, str, schemas.Unset] = schemas.unset,
        date_closed: typing.Union[MetaOapg.properties.date_closed, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        creator: typing.Union['Creator', schemas.Unset] = schemas.unset,
        assignees: typing.Union['CreateTaskresponseAssignees', schemas.Unset] = schemas.unset,
        checklists: typing.Union['CreateTaskresponseChecklists', schemas.Unset] = schemas.unset,
        parent: typing.Union[MetaOapg.properties.parent, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        priority: typing.Union[MetaOapg.properties.priority, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        due_date: typing.Union[MetaOapg.properties.due_date, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        start_date: typing.Union[MetaOapg.properties.start_date, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        time_estimate: typing.Union[MetaOapg.properties.time_estimate, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        time_spent: typing.Union[MetaOapg.properties.time_spent, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        custom_fields: typing.Union[MetaOapg.properties.custom_fields, list, tuple, schemas.Unset] = schemas.unset,
        folder: typing.Union['Folder', schemas.Unset] = schemas.unset,
        space: typing.Union['Space', schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateTaskresponse':
        return super().__new__(
            cls,
            *args,
            tags=tags,
            description=description,
            id=id,
            custom_id=custom_id,
            custom_item_id=custom_item_id,
            name=name,
            text_content=text_content,
            status=status,
            orderindex=orderindex,
            date_created=date_created,
            date_updated=date_updated,
            date_closed=date_closed,
            creator=creator,
            assignees=assignees,
            checklists=checklists,
            parent=parent,
            priority=priority,
            due_date=due_date,
            start_date=start_date,
            time_estimate=time_estimate,
            time_spent=time_spent,
            custom_fields=custom_fields,
            folder=folder,
            space=space,
            url=url,
            _configuration=_configuration,
            **kwargs,
        )

from click_up_python_sdk.model.create_taskresponse_assignees import CreateTaskresponseAssignees
from click_up_python_sdk.model.create_taskresponse_checklists import CreateTaskresponseChecklists
from click_up_python_sdk.model.create_taskresponse_tags import CreateTaskresponseTags
from click_up_python_sdk.model.creator import Creator
from click_up_python_sdk.model.custom_fields8 import CustomFields8
from click_up_python_sdk.model.folder import Folder
from click_up_python_sdk.model.model_list import ModelList
from click_up_python_sdk.model.space import Space
from click_up_python_sdk.model.status import Status
