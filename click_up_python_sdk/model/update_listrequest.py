# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from click_up_python_sdk import schemas  # noqa: F401


class UpdateListrequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "unset_status",
            "due_date_time",
            "due_date",
            "name",
            "assignee",
            "priority",
            "content",
            "status",
        }
        
        class properties:
            name = schemas.StrSchema
            content = schemas.StrSchema
            due_date = schemas.IntSchema
            due_date_time = schemas.BoolSchema
            priority = schemas.IntSchema
            assignee = schemas.StrSchema
            status = schemas.StrSchema
            unset_status = schemas.BoolSchema
            __annotations__ = {
                "name": name,
                "content": content,
                "due_date": due_date,
                "due_date_time": due_date_time,
                "priority": priority,
                "assignee": assignee,
                "status": status,
                "unset_status": unset_status,
            }
    
    unset_status: MetaOapg.properties.unset_status
    due_date_time: MetaOapg.properties.due_date_time
    due_date: MetaOapg.properties.due_date
    name: MetaOapg.properties.name
    assignee: MetaOapg.properties.assignee
    priority: MetaOapg.properties.priority
    content: MetaOapg.properties.content
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content"]) -> MetaOapg.properties.content: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["due_date"]) -> MetaOapg.properties.due_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["due_date_time"]) -> MetaOapg.properties.due_date_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["priority"]) -> MetaOapg.properties.priority: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignee"]) -> MetaOapg.properties.assignee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unset_status"]) -> MetaOapg.properties.unset_status: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "content", "due_date", "due_date_time", "priority", "assignee", "status", "unset_status", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content"]) -> MetaOapg.properties.content: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["due_date"]) -> MetaOapg.properties.due_date: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["due_date_time"]) -> MetaOapg.properties.due_date_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["priority"]) -> MetaOapg.properties.priority: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignee"]) -> MetaOapg.properties.assignee: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unset_status"]) -> MetaOapg.properties.unset_status: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "content", "due_date", "due_date_time", "priority", "assignee", "status", "unset_status", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        unset_status: typing.Union[MetaOapg.properties.unset_status, bool, ],
        due_date_time: typing.Union[MetaOapg.properties.due_date_time, bool, ],
        due_date: typing.Union[MetaOapg.properties.due_date, decimal.Decimal, int, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        assignee: typing.Union[MetaOapg.properties.assignee, str, ],
        priority: typing.Union[MetaOapg.properties.priority, decimal.Decimal, int, ],
        content: typing.Union[MetaOapg.properties.content, str, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UpdateListrequest':
        return super().__new__(
            cls,
            *args,
            unset_status=unset_status,
            due_date_time=due_date_time,
            due_date=due_date,
            name=name,
            assignee=assignee,
            priority=priority,
            content=content,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )
