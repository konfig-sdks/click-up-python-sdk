# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from click_up_python_sdk import schemas  # noqa: F401


class Features1(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "checklists",
            "dependency_warning",
            "custom_fields",
            "portfolios",
            "time_estimates",
            "zoom",
            "custom_items",
            "multiple_assignees",
            "points",
            "tags",
            "emails",
            "remap_dependencies",
            "sprints",
            "milestones",
            "due_dates",
        }
        
        class properties:
        
            @staticmethod
            def tags() -> typing.Type['Tags']:
                return Tags
        
            @staticmethod
            def due_dates() -> typing.Type['DueDates']:
                return DueDates
        
            @staticmethod
            def sprints() -> typing.Type['Sprints']:
                return Sprints
        
            @staticmethod
            def points() -> typing.Type['Points']:
                return Points
        
            @staticmethod
            def custom_items() -> typing.Type['CustomItems']:
                return CustomItems
        
            @staticmethod
            def time_estimates() -> typing.Type['TimeEstimates']:
                return TimeEstimates
        
            @staticmethod
            def checklists() -> typing.Type['Checklists']:
                return Checklists
        
            @staticmethod
            def zoom() -> typing.Type['Zoom']:
                return Zoom
        
            @staticmethod
            def milestones() -> typing.Type['Milestones']:
                return Milestones
        
            @staticmethod
            def custom_fields() -> typing.Type['CustomFields']:
                return CustomFields
        
            @staticmethod
            def remap_dependencies() -> typing.Type['RemapDependencies']:
                return RemapDependencies
        
            @staticmethod
            def dependency_warning() -> typing.Type['DependencyWarning']:
                return DependencyWarning
        
            @staticmethod
            def multiple_assignees() -> typing.Type['MultipleAssignees']:
                return MultipleAssignees
        
            @staticmethod
            def portfolios() -> typing.Type['Portfolios']:
                return Portfolios
        
            @staticmethod
            def emails() -> typing.Type['Emails']:
                return Emails
            __annotations__ = {
                "tags": tags,
                "due_dates": due_dates,
                "sprints": sprints,
                "points": points,
                "custom_items": custom_items,
                "time_estimates": time_estimates,
                "checklists": checklists,
                "zoom": zoom,
                "milestones": milestones,
                "custom_fields": custom_fields,
                "remap_dependencies": remap_dependencies,
                "dependency_warning": dependency_warning,
                "multiple_assignees": multiple_assignees,
                "portfolios": portfolios,
                "emails": emails,
            }
    
    checklists: 'Checklists'
    dependency_warning: 'DependencyWarning'
    custom_fields: 'CustomFields'
    portfolios: 'Portfolios'
    time_estimates: 'TimeEstimates'
    zoom: 'Zoom'
    custom_items: 'CustomItems'
    multiple_assignees: 'MultipleAssignees'
    points: 'Points'
    tags: 'Tags'
    emails: 'Emails'
    remap_dependencies: 'RemapDependencies'
    sprints: 'Sprints'
    milestones: 'Milestones'
    due_dates: 'DueDates'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tags"]) -> 'Tags': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["due_dates"]) -> 'DueDates': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sprints"]) -> 'Sprints': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["points"]) -> 'Points': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_items"]) -> 'CustomItems': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_estimates"]) -> 'TimeEstimates': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["checklists"]) -> 'Checklists': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["zoom"]) -> 'Zoom': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["milestones"]) -> 'Milestones': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_fields"]) -> 'CustomFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remap_dependencies"]) -> 'RemapDependencies': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dependency_warning"]) -> 'DependencyWarning': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["multiple_assignees"]) -> 'MultipleAssignees': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["portfolios"]) -> 'Portfolios': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emails"]) -> 'Emails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["tags", "due_dates", "sprints", "points", "custom_items", "time_estimates", "checklists", "zoom", "milestones", "custom_fields", "remap_dependencies", "dependency_warning", "multiple_assignees", "portfolios", "emails", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tags"]) -> 'Tags': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["due_dates"]) -> 'DueDates': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sprints"]) -> 'Sprints': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["points"]) -> 'Points': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_items"]) -> 'CustomItems': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_estimates"]) -> 'TimeEstimates': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["checklists"]) -> 'Checklists': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["zoom"]) -> 'Zoom': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["milestones"]) -> 'Milestones': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_fields"]) -> 'CustomFields': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remap_dependencies"]) -> 'RemapDependencies': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dependency_warning"]) -> 'DependencyWarning': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["multiple_assignees"]) -> 'MultipleAssignees': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["portfolios"]) -> 'Portfolios': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emails"]) -> 'Emails': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["tags", "due_dates", "sprints", "points", "custom_items", "time_estimates", "checklists", "zoom", "milestones", "custom_fields", "remap_dependencies", "dependency_warning", "multiple_assignees", "portfolios", "emails", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        checklists: 'Checklists',
        dependency_warning: 'DependencyWarning',
        custom_fields: 'CustomFields',
        portfolios: 'Portfolios',
        time_estimates: 'TimeEstimates',
        zoom: 'Zoom',
        custom_items: 'CustomItems',
        multiple_assignees: 'MultipleAssignees',
        points: 'Points',
        tags: 'Tags',
        emails: 'Emails',
        remap_dependencies: 'RemapDependencies',
        sprints: 'Sprints',
        milestones: 'Milestones',
        due_dates: 'DueDates',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Features1':
        return super().__new__(
            cls,
            *args,
            checklists=checklists,
            dependency_warning=dependency_warning,
            custom_fields=custom_fields,
            portfolios=portfolios,
            time_estimates=time_estimates,
            zoom=zoom,
            custom_items=custom_items,
            multiple_assignees=multiple_assignees,
            points=points,
            tags=tags,
            emails=emails,
            remap_dependencies=remap_dependencies,
            sprints=sprints,
            milestones=milestones,
            due_dates=due_dates,
            _configuration=_configuration,
            **kwargs,
        )

from click_up_python_sdk.model.checklists import Checklists
from click_up_python_sdk.model.custom_fields import CustomFields
from click_up_python_sdk.model.custom_items import CustomItems
from click_up_python_sdk.model.dependency_warning import DependencyWarning
from click_up_python_sdk.model.due_dates import DueDates
from click_up_python_sdk.model.emails import Emails
from click_up_python_sdk.model.milestones import Milestones
from click_up_python_sdk.model.multiple_assignees import MultipleAssignees
from click_up_python_sdk.model.points import Points
from click_up_python_sdk.model.portfolios import Portfolios
from click_up_python_sdk.model.remap_dependencies import RemapDependencies
from click_up_python_sdk.model.sprints import Sprints
from click_up_python_sdk.model.tags import Tags
from click_up_python_sdk.model.time_estimates import TimeEstimates
from click_up_python_sdk.model.zoom import Zoom
