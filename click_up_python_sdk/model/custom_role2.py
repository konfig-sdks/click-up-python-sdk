# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from click_up_python_sdk import schemas  # noqa: F401


class CustomRole2(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "date_created",
            "members",
            "name",
            "inherited_role",
            "id",
            "team_id",
        }
        
        class properties:
            id = schemas.IntSchema
            team_id = schemas.StrSchema
            name = schemas.StrSchema
            inherited_role = schemas.IntSchema
            date_created = schemas.StrSchema
        
            @staticmethod
            def members() -> typing.Type['CustomRole2Members']:
                return CustomRole2Members
            __annotations__ = {
                "id": id,
                "team_id": team_id,
                "name": name,
                "inherited_role": inherited_role,
                "date_created": date_created,
                "members": members,
            }
    
    date_created: MetaOapg.properties.date_created
    members: 'CustomRole2Members'
    name: MetaOapg.properties.name
    inherited_role: MetaOapg.properties.inherited_role
    id: MetaOapg.properties.id
    team_id: MetaOapg.properties.team_id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["team_id"]) -> MetaOapg.properties.team_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["inherited_role"]) -> MetaOapg.properties.inherited_role: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_created"]) -> MetaOapg.properties.date_created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["members"]) -> 'CustomRole2Members': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "team_id", "name", "inherited_role", "date_created", "members", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["team_id"]) -> MetaOapg.properties.team_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["inherited_role"]) -> MetaOapg.properties.inherited_role: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_created"]) -> MetaOapg.properties.date_created: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["members"]) -> 'CustomRole2Members': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "team_id", "name", "inherited_role", "date_created", "members", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        date_created: typing.Union[MetaOapg.properties.date_created, str, ],
        members: 'CustomRole2Members',
        name: typing.Union[MetaOapg.properties.name, str, ],
        inherited_role: typing.Union[MetaOapg.properties.inherited_role, decimal.Decimal, int, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        team_id: typing.Union[MetaOapg.properties.team_id, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomRole2':
        return super().__new__(
            cls,
            *args,
            date_created=date_created,
            members=members,
            name=name,
            inherited_role=inherited_role,
            id=id,
            team_id=team_id,
            _configuration=_configuration,
            **kwargs,
        )

from click_up_python_sdk.model.custom_role2_members import CustomRole2Members
