# coding: utf-8

"""
    ClickUp API Reference

    This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from click_up_python_sdk import schemas  # noqa: F401


class LastAction(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "note",
            "steps_current",
            "key_result_id",
            "date_modified",
            "id",
            "userid",
            "steps_before",
            "steps_taken",
        }
        
        class properties:
            id = schemas.StrSchema
            key_result_id = schemas.StrSchema
            userid = schemas.IntSchema
            date_modified = schemas.StrSchema
            steps_taken = schemas.AnyTypeSchema
            note = schemas.StrSchema
            steps_before = schemas.AnyTypeSchema
            steps_current = schemas.AnyTypeSchema
            __annotations__ = {
                "id": id,
                "key_result_id": key_result_id,
                "userid": userid,
                "date_modified": date_modified,
                "steps_taken": steps_taken,
                "note": note,
                "steps_before": steps_before,
                "steps_current": steps_current,
            }
    
    note: MetaOapg.properties.note
    steps_current: MetaOapg.properties.steps_current
    key_result_id: MetaOapg.properties.key_result_id
    date_modified: MetaOapg.properties.date_modified
    id: MetaOapg.properties.id
    userid: MetaOapg.properties.userid
    steps_before: MetaOapg.properties.steps_before
    steps_taken: MetaOapg.properties.steps_taken
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["key_result_id"]) -> MetaOapg.properties.key_result_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userid"]) -> MetaOapg.properties.userid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_modified"]) -> MetaOapg.properties.date_modified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["steps_taken"]) -> MetaOapg.properties.steps_taken: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["steps_before"]) -> MetaOapg.properties.steps_before: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["steps_current"]) -> MetaOapg.properties.steps_current: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "key_result_id", "userid", "date_modified", "steps_taken", "note", "steps_before", "steps_current", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["key_result_id"]) -> MetaOapg.properties.key_result_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userid"]) -> MetaOapg.properties.userid: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_modified"]) -> MetaOapg.properties.date_modified: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["steps_taken"]) -> MetaOapg.properties.steps_taken: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["steps_before"]) -> MetaOapg.properties.steps_before: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["steps_current"]) -> MetaOapg.properties.steps_current: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "key_result_id", "userid", "date_modified", "steps_taken", "note", "steps_before", "steps_current", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        note: typing.Union[MetaOapg.properties.note, str, ],
        steps_current: typing.Union[MetaOapg.properties.steps_current, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        key_result_id: typing.Union[MetaOapg.properties.key_result_id, str, ],
        date_modified: typing.Union[MetaOapg.properties.date_modified, str, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        userid: typing.Union[MetaOapg.properties.userid, decimal.Decimal, int, ],
        steps_before: typing.Union[MetaOapg.properties.steps_before, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        steps_taken: typing.Union[MetaOapg.properties.steps_taken, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'LastAction':
        return super().__new__(
            cls,
            *args,
            note=note,
            steps_current=steps_current,
            key_result_id=key_result_id,
            date_modified=date_modified,
            id=id,
            userid=userid,
            steps_before=steps_before,
            steps_taken=steps_taken,
            _configuration=_configuration,
            **kwargs,
        )
